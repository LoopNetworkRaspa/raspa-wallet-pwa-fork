diff --git a/node_modules/@karlsen/wallet/dist/wallet/wallet.js b/node_modules/@karlsen/wallet/dist/wallet/wallet.js
index fce870e..1ad4fb4 100644
--- a/node_modules/@karlsen/wallet/dist/wallet/wallet.js
+++ b/node_modules/@karlsen/wallet/dist/wallet/wallet.js
@@ -1176,12 +1176,12 @@ Wallet.networkTypes = {
     karlsen: { port: 42110, network: 'karlsen', name: 'mainnet' },
     karlsentest: { port: 42210, network: 'karlsentest', name: 'testnet' },
     karlsensim: { port: 42510, network: 'karlsensim', name: 'simnet' },
-    karlsendev: { port: 42610, network: 'karlsendev', name: 'devnet' }
+    raspadev: { port: 16510, network: 'raspadev', name: 'raspadev' }
 };
 Wallet.networkAliases = {
     mainnet: 'karlsen',
     testnet: 'karlsentest',
-    devnet: 'karlsendev',
+    devnet: 'raspadev',
     simnet: 'karlsensim'
 };
 //# sourceMappingURL=data:application/json;base64,{"version":3,"file":"wallet.js","sourceRoot":"","sources":["../../wallet/wallet.ts"],"names":[],"mappings":"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","sourcesContent":["const Mnemonic = require('bitcore-mnemonic');\nimport * as karlsencore from '@karlsen/core-lib';\nimport * as helper from '../utils/helper';\nimport {Storage, StorageType} from './storage';\nexport * from './storage';\nexport * from './error';\nimport {Crypto} from './crypto';\nconst KLS = helper.KLS;\n\nimport {\n\tNetwork, NetworkOptions, SelectedNetwork, WalletSave, Api, TxSend, TxResp,\n\tPendingTransactions, WalletCache, IRPC, RPC, WalletOptions,\tWalletOpt,\n\tTxInfo, ComposeTxInfo, BuildTxResult, TxCompoundOptions, DebugInfo,\n\tScaneMoreResult\n} from '../types/custom-types';\n\nimport {CreateLogger, Logger} from '../utils/logger';\nimport {AddressManager} from './address-manager';\nimport {UnspentOutput, UtxoSet, CONFIRMATION_COUNT, COINBASE_CFM_COUNT} from './utxo';\nimport {TXStore} from './tx-store';\nimport {CacheStore} from './cache-store';\nimport {KarlsenAPI, ApiError} from './api';\nimport {DEFAULT_FEE,DEFAULT_NETWORK} from '../config.json';\nimport {EventTargetImpl} from './event-target-impl';\n\n\nconst BALANCE_CONFIRMED = Symbol();\nconst BALANCE_PENDING = Symbol();\nconst BALANCE_TOTAL = Symbol();\nconst COMPOUND_UTXO_MAX_COUNT = 500;\n\nconst SompiPerKarlsen = 100_000_000\n\n// MaxSompi is the maximum transaction amount allowed in sompi.\nconst MaxSompi = 4_961_000_000 * SompiPerKarlsen\n\nexport {karlsencore, COMPOUND_UTXO_MAX_COUNT, CONFIRMATION_COUNT, COINBASE_CFM_COUNT};\n\n/** Class representing an HDWallet with derivable child addresses */\nclass Wallet extends EventTargetImpl {\n\n\tstatic Mnemonic: typeof Mnemonic = Mnemonic;\n\tstatic passwordHandler = Crypto;\n\tstatic Crypto = Crypto;\n\tstatic karlsencore=karlsencore;\n\tstatic COMPOUND_UTXO_MAX_COUNT=COMPOUND_UTXO_MAX_COUNT;\n\tstatic MaxMassAcceptedByBlock = 100000;\n\tstatic MaxMassUTXOs = 100000;\n\t//Wallet.MaxMassAcceptedByBlock -\n\t//karlsencore.Transaction.EstimatedStandaloneMassWithoutInputs;\n\n\t// TODO - integrate with Karlsencore-lib\n\tstatic networkTypes: Object = {\n\t\tkarlsen: { port: 42110, network: 'karlsen', name : 'mainnet' },\n\t\tkarlsentest: { port: 42210, network: 'karlsentest', name : 'testnet' },\n\t\tkarlsensim: { port: 42510, network: 'karlsensim', name : 'simnet' },\n\t\tkarlsendev: { port: 42610, network: 'karlsendev', name : 'devnet' }\n\t}\n\n\tstatic networkAliases: Object = {\n\t\tmainnet: 'karlsen',\n\t\ttestnet: 'karlsentest',\n\t\tdevnet: 'karlsendev',\n\t\tsimnet: 'karlsensim'\n\t}\n\n\n\tstatic KLS(v:number): string {\n\t\treturn KLS(v);\n\t}\n\n\n\tstatic initRuntime() {\n\t\treturn karlsencore.initRuntime();\n\t}\n\n\t/**\n\t * Converts a mnemonic to a new wallet.\n\t * @param seedPhrase The 12 word seed phrase.\n\t * @returns new Wallet\n\t */\n\tstatic fromMnemonic(seedPhrase: string, networkOptions: NetworkOptions, options: WalletOptions = {}): Wallet {\n\t\tif (!networkOptions || !networkOptions.network)\n\t\t\tthrow new Error(`fromMnemonic(seedPhrase,networkOptions): missing network argument`);\n\t\tconst privKey = new Mnemonic(seedPhrase.trim()).toHDPrivateKey().toString();\n\t\tconst wallet = new this(privKey, seedPhrase, networkOptions, options);\n\t\treturn wallet;\n\t}\n\n\t/**\n\t * Creates a new Wallet from encrypted wallet data.\n\t * @param password the password the user encrypted their seed phrase with\n\t * @param encryptedMnemonic the encrypted seed phrase from local storage\n\t * @throws Will throw \"Incorrect password\" if password is wrong\n\t */\n\tstatic async import (password: string, encryptedMnemonic: string, networkOptions: NetworkOptions, options: WalletOptions = {}): Promise < Wallet > {\n\t\tconst decrypted = await Crypto.decrypt(password, encryptedMnemonic);\n\t\tconst savedWallet = JSON.parse(decrypted) as WalletSave;\n\t\tconst myWallet = new this(savedWallet.privKey, savedWallet.seedPhrase, networkOptions, options);\n\t\treturn myWallet;\n\t}\n\n\tHDWallet: karlsencore.HDPrivateKey;\n\tdisableBalanceNotifications: boolean = false;\n\tget balance(): {available: number, pending:number, total:number} {\n\t\treturn {\n\t\t\tavailable: this[BALANCE_CONFIRMED],\n\t\t\tpending: this[BALANCE_PENDING],\n\t\t\ttotal: this[BALANCE_CONFIRMED] + this[BALANCE_PENDING]\n\t\t}\n\t}\n\n\t/**\n\t * Set by addressManager\n\t */\n\tget receiveAddress() {\n\t\treturn this.addressManager.receiveAddress.current.address;\n\t}\n\n\tget changeAddress() {\n\t\treturn this.addressManager.changeAddress.current.address;\n\t}\n\n\t/**\n\t * Current network.\n\t */\n\tnetwork: Network = 'karlsen';\n\n\tapi: KarlsenAPI; //new KarlsenAPI();\n\n\t/** \n\t * Default fee\n\t */\n\n\tdefaultFee: number = 1; //per byte\n\n\tsubnetworkId: string = \"0000000000000000000000000000000000000000\"; //hex string\n\n\tlast_tx_:string = '';\n\t/**\n\t * Current API endpoint for selected network\n\t */\n\tapiEndpoint = 'localhost:16210';\n\n\t/**\n\t * A 12 word mnemonic.\n\t */\n\tmnemonic: string;\n\n\tutxoSet: UtxoSet;\n\n\taddressManager: AddressManager;\n\n\tblueScore: number = -1;\n\n\tsyncVirtualSelectedParentBlueScoreStarted:boolean = false;\n\tsyncInProggress:boolean = false;\n\n\t/* eslint-disable */\n\tpendingInfo: PendingTransactions = {\n\t\ttransactions: {},\n\t\tget amount() {\n\t\t\tconst transactions = Object.values(this.transactions);\n\t\t\tif (transactions.length === 0) return 0;\n\t\t\treturn transactions.reduce((prev, cur) => prev + cur.amount + cur.fee, 0);\n\t\t},\n\t\tadd(\n\t\t\tid: string,\n\t\t\ttx: {\n\t\t\t\tto: string;\n\t\t\t\tutxoIds: string[];\n\t\t\t\trawTx: string;\n\t\t\t\tamount: number;\n\t\t\t\tfee: number\n\t\t\t}\n\t\t) {\n\t\t\tthis.transactions[id] = tx;\n\t\t}\n\t};\n\t/**\n\t * Transactions sorted by hash.\n\t */\n\ttransactions:Record<string, { rawTx: string; utxoIds: string[]; amount: number; to: string; fee: number; }> = {};\n\n\t/**\n\t * Transaction arrays keyed by address.\n\t */\n\ttransactionsStorage: Record < string, Api.Transaction[] > = {};\n\n\n\toptions: WalletOpt;\n\tconnectSignal:helper.DeferredPromise;\n\ttxStore:TXStore;\n\tcacheStore:CacheStore;\n\n\tuid:string;\n\n\t/** Create a wallet.\n\t * @param walletSave (optional)\n\t * @param walletSave.privKey Saved wallet's private key.\n\t * @param walletSave.seedPhrase Saved wallet's seed phrase.\n\t */\n\tconstructor(privKey: string, seedPhrase: string, networkOptions: NetworkOptions, options: WalletOptions = {}) {\n\t\tsuper();\n\t\tthis.logger = CreateLogger('KarlsenWallet');\n\t\tthis.api = new KarlsenAPI();\n\t\t//@ts-ignore\n\t\t//postMessage({error:new ApiError(\"test\") })\n\t\tlet defaultOpt = {\n\t\t\tskipSyncBalance: false,\n\t\t\tsyncOnce: false,\n\t\t\taddressDiscoveryExtent:150,\n\t\t\tlogLevel:'info',\n\t\t\tdisableAddressDerivation:false,\n\t\t\tcheckGRPCFlags:false,\n\t\t\tminimumRelayTransactionFee:1000,\n\t\t\tupdateTxTimes:true\n\t\t};\n\t\t// console.log(\"CREATING WALLET FOR NETWORK\", this.network);\n\t\tthis.options = {...defaultOpt,\t...options};\n\t\t//this.options.addressDiscoveryExtent = 500;\n\t\tthis.setLogLevel(this.options.logLevel); \n\n\t\tthis.network = networkOptions.network;\n\t\tthis.defaultFee = networkOptions.defaultFee || this.defaultFee;\n\t\tif (networkOptions.rpc)\n\t\t\tthis.api.setRPC(networkOptions.rpc);\n\n\n\t\tif (privKey && seedPhrase) {\n\t\t\tthis.HDWallet = new karlsencore.HDPrivateKey(privKey);\n\t\t\tthis.mnemonic = seedPhrase;\n\t\t} else {\n\t\t\tconst temp = new Mnemonic(Mnemonic.Words.ENGLISH);\n\t\t\tthis.mnemonic = temp.toString();\n\t\t\tthis.HDWallet = new karlsencore.HDPrivateKey(temp.toHDPrivateKey().toString());\n\t\t}\n\n\t\tthis.uid = this.createUID();\n\n\t\tthis.utxoSet = new UtxoSet(this);\n\t\tthis.txStore = new TXStore(this);\n\t\tthis.cacheStore = new CacheStore(this);\n\t\t//this.utxoSet.on(\"balance-update\", this.updateBalance.bind(this));\n\t\t\n\t\tthis.addressManager = new AddressManager(this.HDWallet, this.network);\n\t\tif(this.options.disableAddressDerivation)\n\t\t\tthis.addressManager.receiveAddress.next();\n\t\t//this.initAddressManager();\n\t\t//this.sync(this.options.syncOnce);\n\t\tthis.connectSignal = helper.Deferred();\n\t\tthis.api.on(\"connect\", ()=>{\n\t\t\tthis.onApiConnect()\n\t\t})\n\t\tthis.api.on(\"disconnect\", ()=>{\n\t\t\tthis.onApiDisconnect();\n\t\t})\n\t}\n\n\tcreateUID(){\n\t\tconst {privateKey} = this.HDWallet.deriveChild(`m/44'/972/0'/1'/0'`);\n\t\tlet address = privateKey.toAddress(this.network).toString().split(\":\")[1]\n\t\treturn helper.createHash(address);\n\t}\n\n\tasync onApiConnect(){\n\t\tthis.connectSignal.resolve();\n\t\tlet {connected} = this;\n\t\tthis.connected = true;\n\t\tthis.logger.info(\"gRPC connected\");\n\t\tthis.emit(\"api-connect\");\n\t\tif(this.syncSignal && connected!==undefined) {//if sync was called\n\t\t\tthis.logger.info(\"starting wallet re-sync ...\");\n\t\t\tawait this.sync(this.syncOnce);\n\t\t}\n\t\t\n\t}\n\n\tconnected:boolean|undefined;\n\tonApiDisconnect() {\n\t\tthis.connected = false;\n\t\tthis.syncVirtualSelectedParentBlueScoreStarted = false;\n\t\tthis.logger.verbose(\"gRPC disconnected\");\n\t\tthis.emit(\"api-disconnect\");\n\t}\n\n\tasync update(syncOnce:boolean=true){\n\t\tawait this.sync(syncOnce);\n\t}\n\n\tsyncOnce:boolean|undefined;\n\tsyncSignal: helper.DeferredPromise|undefined;\n\twaitOrSync(){\n\t\tif(this.syncSignal)\n\t\t\treturn this.syncSignal;\n\t\treturn this.sync();\n\t}\n\tasync sync(syncOnce:boolean|undefined=undefined){\n\t\tthis.syncSignal = helper.Deferred();\n\t\tawait this.connectSignal;\n\t\tif(syncOnce === undefined)\n\t\t\tsyncOnce = this.options.syncOnce;\n\t\tsyncOnce = !!syncOnce;\n\n\t\tthis.syncInProggress = true;\n\t\tthis.emit(\"sync-start\");\n\t\tawait this.txStore.restore();\n\t\tawait this.cacheStore.restore();\n\t\tconst ts0 = Date.now();\n\t\tthis.logger.info(`sync ... starting wallet sync`);// ${syncOnce?'(monitoring disabled)':''}`);\n\t\t//this.logger.info(`sync ............ started, syncOnce:${syncOnce}`)\n\n\t\t//if last time syncOnce was OFF we have subscriptions to utxo-change\n\t\tif(this.syncOnce === false && syncOnce){\n\t\t\tthrow new Error(\"Wallet sync process already running.\")\n\t\t}\n\n\t\tthis.syncOnce = syncOnce;\n\t\tthis.initAddressManager();\n\n\t\tawait this.initBlueScoreSync(syncOnce)\n\t    .catch(e=>{\n\t        this.logger.info(\"syncVirtualSelectedParentBlueScore:error\", e)\n\t    })\n\t\t\n\t\tif(this.options.disableAddressDerivation){\n\t\t\tthis.logger.warn('sync ... running with address discovery disabled');\n\t\t\tthis.utxoSet.syncAddressesUtxos([this.receiveAddress]);\n\t\t}else{\n\t\t    await this.addressDiscovery(this.options.addressDiscoveryExtent)\n\t\t    .catch(e=>{\n\t\t        this.logger.info(\"addressDiscovery:error\", e)\n\t\t    })\n\t    }\n\n\t    this.syncInProggress = false;\n\t    if(!syncOnce)\n\t\t\tawait this.utxoSet.utxoSubscribe();\n\n\t\tconst ts1 = Date.now();\n\t\tconst delta = ((ts1-ts0)/1000).toFixed(1);\n\t    this.logger.info(`sync ... ${this.utxoSet.count} UTXO entries found`);\n\t\tthis.logger.info(`sync ... indexed ${this.addressManager.receiveAddress.counter} receive and ${this.addressManager.changeAddress.counter} change addresses`);\n\t    this.logger.info(`sync ... finished (sync done in ${delta} seconds)`);\n\t\tthis.emit(\"sync-finish\");\n\t\tconst {available, pending, total} = this.balance;\n\t\tthis.emit(\"ready\", {\n\t\t\tavailable,pending, total,\n\t\t\tconfirmedUtxosCount: this.utxoSet.confirmedCount\n\t\t});\n\t    this.emitBalance();\n\t    this.emitAddress();\n\t    this.txStore.emitTxs();\n\t    this.syncSignal.resolve();\n\t\tif(!this.utxoSet.clearMissing())\n\t\t\tthis.updateDebugInfo();\n\t}\n\n\tgetVirtualSelectedParentBlueScore() {\n\t\treturn this.api.getVirtualSelectedParentBlueScore();\n\t}\n\n\tgetVirtualDaaScore() {\n\t\treturn this.api.getVirtualDaaScore();\n\t}\n\n\tasync initBlueScoreSync(once:boolean = false) {\n\t\tif(this.syncVirtualSelectedParentBlueScoreStarted)\n\t\t\treturn;\n\t\tthis.syncVirtualSelectedParentBlueScoreStarted = true;\n\t\tlet r = await this.getVirtualDaaScore();\n\t\tlet {virtualDaaScore:blueScore} = r;\n\t\tconsole.log(\"getVirtualSelectedParentBlueScore :result\", r)\n\t\tthis.blueScore = blueScore;\n\t\tthis.emit(\"blue-score-changed\", {blueScore})\n\t\tthis.utxoSet.updateUtxoBalance();\n\n\t\tif(once) {\n\t\t\tthis.syncVirtualSelectedParentBlueScoreStarted = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.api.subscribeVirtualDaaScoreChanged((result) => {\n\t\t\tlet {virtualDaaScore} = result;\n\t\t\t//console.log(\"subscribeVirtualSelectedParentBlueScoreChanged:result\", result)\n\t\t\tthis.blueScore = virtualDaaScore;\n\t\t\tthis.emit(\"blue-score-changed\", {\n\t\t\t\tblueScore: virtualDaaScore\n\t\t\t})\n\t\t\tthis.utxoSet.updateUtxoBalance();\n\t\t}).then(r=>{\n\t\t\tconsole.log(\"subscribeVirtualDaaScoreChanged:responce\", r)\n\t\t}, e=>{\n\t\t\tconsole.log(\"subscribeVirtualDaaScoreChanged:error\", e)\n\t\t})\n\t}\n\n\taddressManagerInitialized:boolean|undefined;\n\tinitAddressManager() {\n\t\tif(this.addressManagerInitialized)\n\t\t\treturn\n\t\tthis.addressManagerInitialized = true;\n\n\t\tthis.addressManager.on(\"new-address\", detail => {\n\t\t\tif(!this.syncInProggress){\n\t\t\t\tthis.emitAddress();\n\t\t\t}\n\t\t\t//console.log(\"new-address\", detail)\n\t\t\tif (this.options.skipSyncBalance)\n\t\t\t\treturn\n\n\t\t\t//console.log(\"new-address:detail\", detail)\n\t\t\tconst {\taddress, type } = detail;\n\t\t\tthis.utxoSet.syncAddressesUtxos([address]);\n\t\t})\n\t\tif(!this.receiveAddress){\n\t\t\tthis.addressManager.receiveAddress.next();\n\t\t}\n\t}\n\n\tasync startUpdatingTransactions(version:undefined|number=undefined):Promise<boolean>{\n\t\treturn await this.txStore.startUpdatingTransactions(version);\n\t}\n\n\t/**\n\t * Set rpc provider\n\t * @param rpc\n\t */\n\tsetRPC(rpc: IRPC) {\n\t\tthis.api.setRPC(rpc);\n\t}\n\n\t/*\n\tsetStorageType(type:StorageType){\n\t\tthis.storage.setType(type);\n\t}\n\tsetStorageFolder(folder:string){\n\t\tthis.storage.setFolder(folder);\n\t}\n\tsetStorageFileName(fileName:string){\n\t\tthis.storage.setFileName(fileName);\n\t}\n\t*/\n\t/*\n\t_storage: typeof storageClasses.Storage|undefined;\n\n\tsetStoragePassword(password: string) {\n\t\tif (!this.storage)\n\t\t\tthrow new Error(\"Please init storage\")\n\t\tthis.storage.setPassword(password);\n\t}\n\tget storage(): typeof storageClasses.Storage | undefined {\n\t\treturn this._storage;\n\t}\n\n\topenFileStorage(fileName: string, password: string, folder: string = '') {\n\t\tlet storage = CreateStorage();\n\t\tif (folder)\n\t\t\tstorage.setFolder(folder);\n\t\tstorage.setFileName(fileName);\n\t\tstorage.setPassword(password);\n\t\tthis._storage = storage;\n\t}\n\t*/\n\n\t/**\n\t * Queries API for address[] UTXOs. Adds tx to transactions storage. Also sorts the entire transaction set.\n\t * @param addresses\n\t */\n\tasync findUtxos(addresses: string[], debug = false): Promise < {\n\t\ttxID2Info: Map < string,\n\t\t{\n\t\t\tutxos: Api.Utxo[],\n\t\t\taddress: string\n\t\t} > ,\n\t\taddressesWithUTXOs: string[]\n\t} > {\n\t\tthis.logger.verbose(`scanning UTXO entries for ${addresses.length} addresses`);\n\n\t\tconst utxosMap = await this.api.getUtxosByAddresses(addresses)\n\n\t\tconst addressesWithUTXOs: string[] = [];\n\t\tconst txID2Info = new Map();\n\n\t\tif (debug) {\n\t\t\tutxosMap.forEach((utxos, address) => {\n\t\t\t\t// utxos.sort((b, a)=> a.index-b.index)\n\t\t\t\tutxos.map(t => {\n\t\t\t\t\tlet info = txID2Info.get(t.transactionId);\n\t\t\t\t\tif (!info) {\n\t\t\t\t\t\tinfo = {\n\t\t\t\t\t\t\tutxos: [],\n\t\t\t\t\t\t\taddress\n\t\t\t\t\t\t};\n\t\t\t\t\t\ttxID2Info.set(t.transactionId, info);\n\t\t\t\t\t}\n\t\t\t\t\tinfo.utxos.push(t);\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tutxosMap.forEach((utxos, address) => {\n\t\t\t// utxos.sort((b, a)=> a.index-b.index)\n\t\t\tthis.logger.verbose(`${address} - ${utxos.length} UTXO entries found`);\n\t\t\tif (utxos.length !== 0) {\n        \t\tthis.disableBalanceNotifications = true;\n\t\t\t\tthis.utxoSet.utxoStorage[address] = utxos;\n\t\t\t\tthis.utxoSet.add(utxos, address);\n\t\t\t\taddressesWithUTXOs.push(address);\n\t\t\t\tthis.disableBalanceNotifications = false;\n\t\t\t\tthis.emitBalance();\n      \t\t}\n\t\t})\n\n\t\tconst isActivityOnReceiveAddr =\n\t\t\tthis.utxoSet.utxoStorage[this.receiveAddress] !== undefined;\n\t\tif (isActivityOnReceiveAddr) {\n\t\t\tthis.addressManager.receiveAddress.next();\n\t\t}\n\t\treturn {\n\t\t\taddressesWithUTXOs,\n\t\t\ttxID2Info\n\t\t};\n\t}\n\n\t[BALANCE_CONFIRMED]:number = 0;\n\t[BALANCE_PENDING]:number = 0;\n\t[BALANCE_TOTAL]:number = 0;\n\tadjustBalance(isConfirmed:boolean, amount:number, notify:boolean=true){\n\t\tconst {available, pending} = this.balance;\n\t\tif(isConfirmed){\n\t\t\tthis[BALANCE_CONFIRMED] += amount;\n\t\t}else{\n\t\t\tthis[BALANCE_PENDING] += amount;\n\t\t}\n\n\t\tthis[BALANCE_TOTAL] = this[BALANCE_CONFIRMED] + this[BALANCE_PENDING];\n\n\t\tif(notify===false)\n\t\t\treturn\n\t\tconst {available:_available, pending:_pending} = this.balance;\n\t\tif(!this.syncInProggress && !this.disableBalanceNotifications && (available!=_available || pending!=_pending))\n\t\t\tthis.emitBalance();\n\t}\n\n\t/**\n\t * Emit wallet balance.\n\t */\n\tlastBalanceNotification:{available:number, pending:number} = {available:0, pending:0}\n\temitBalance(): void {\n\t\tconst {available, pending, total} = this.balance;\n\t\tconst {available:_available, pending:_pending} = this.lastBalanceNotification;\n\t\tif(available==_available && pending==_pending)\n\t\t\treturn\n\t\tthis.lastBalanceNotification = {available, pending};\n\t\tthis.logger.debug(`balance available: ${available} pending: ${pending}`);\n\t\tthis.emit(\"balance-update\", {\n\t\t\tavailable,\n\t\t\tpending,\n\t\t\ttotal,\n\t\t\tconfirmedUtxosCount: this.utxoSet.confirmedCount\n\t\t});\n\t}\n\n\tdebugInfo:DebugInfo = {inUseUTXOs:{satoshis:0, count:0}};\n\tupdateDebugInfo(){\n\t\tlet inUseUTXOs = {satoshis:0, count:0};\n\t\tlet {confirmed, pending, used} = this.utxoSet.utxos||{};\n\t\tthis.utxoSet.inUse.map(utxoId => {\n\t\t\tinUseUTXOs.satoshis += confirmed.get(utxoId)?.satoshis ||\n\t\t\t\tpending.get(utxoId)?.satoshis ||\n\t\t\t\tused.get(utxoId)?.satoshis || 0;\n\t\t});\n\t\tinUseUTXOs.count = this.utxoSet.inUse.length;\n\t\tthis.debugInfo = {inUseUTXOs};\n\t\tthis.emit(\"debug-info\", {debugInfo:this.debugInfo});\n\t}\n\n\tclearUsedUTXOs(){\n\t\tthis.utxoSet.clearUsed();\n\t}\n\n\temitCache(){\n\t\tlet {cache} = this;\n\t\tthis.emit(\"state-update\", {cache});\n\t}\n\n\tlastAddressNotification:{receive?:string, change?:string} = {};\n\temitAddress(){\n\t\tconst receive = this.receiveAddress;\n\t\tconst change = this.changeAddress;\n\t\tlet {receive:_receive, change:_change}= this.lastAddressNotification\n\t\tif(receive == _receive && change == _change)\n\t\t\treturn\n\t\tthis.lastAddressNotification = {receive, change};\n\t\tthis.emit(\"new-address\", {\n\t\t\treceive, change\n\t\t});\n\t}\n\n\t/**\n\t * Updates the selected network\n\t * @param network name of the network\n\t */\n\tasync updateNetwork(network: SelectedNetwork): Promise < void > {\n\t\tthis.demolishWalletState(network.prefix);\n\t\tthis.network = network.prefix;\n\t\tthis.apiEndpoint = network.apiBaseUrl;\n\t}\n\n\tdemolishWalletState(networkPrefix: Network = this.network): void {\n\t\tthis.utxoSet.clear();\n\t\tthis.addressManager = new AddressManager(this.HDWallet, networkPrefix);\n\t\t//this.pendingInfo.transactions = {};\n\t\tthis.transactions = {};\n\t\tthis.transactionsStorage = {};\n\t}\n\n\tasync scanMoreAddresses(count=100, debug=false, receiveStart=-1, changeStart=-1): Promise<ScaneMoreResult>{\n\t\tif (this.syncInProggress)\n\t\t\treturn {error: \"Sync in progress\", code:\"SYNC-IN-PROGRESS\"};\n\n\t\tif(receiveStart < 0)\n\t\t\treceiveStart = this.addressManager.receiveAddress.counter\n\n\t\tif(changeStart < 0)\n\t\t\tchangeStart = this.addressManager.changeAddress.counter\n\n\t\tthis.syncInProggress = true;\n\t\tthis.emit(\"scan-more-addresses-started\", {receiveStart, changeStart})\n\t\tlet error = false;\n\t\tlet res = await this.addressDiscovery(this.options.addressDiscoveryExtent, debug, receiveStart, changeStart, count)\n\t\t.catch(e=>{\n\t\t\tthis.logger.info(\"addressDiscovery:error\", e)\n\t\t\terror = e;\n\t\t})\n\n\t\tthis.syncInProggress = false;\n\t\tif(!this.syncOnce)\n\t\t\tthis.utxoSet.utxoSubscribe();\n\t\tthis.emit(\"scan-more-addresses-ended\", {error})\n\n\t\tif(error)\n\t\t\treturn {error, code:\"ADDRESS-DISCOVERY\"};\n\n\t\tlet {highestIndex=null, endPoints=null} = res||{};\n\t\tthis.logger.info(\"scanMoreAddresses:highestIndex\", highestIndex)\n\t\tthis.logger.info(\"scanMoreAddresses:endPoints\", endPoints)\n\n\t\tthis.emit(\"scan-more-addresses-ended\", {\n\t\t\treceiveFinal:this.addressManager.receiveAddress.counter-1,\n\t\t\tchangeFinal:this.addressManager.changeAddress.counter-1\n\t\t})\n\n\t\treturn {\n\t\t\tcode:\"SUCCESS\",\n\t\t\treceive:{\n\t\t\t\tstart:receiveStart,\n\t\t\t\tend: endPoints?.receive||receiveStart+count,\n\t\t\t\tfinal:this.addressManager.receiveAddress.counter-1\n\t\t\t},\n\t\t\tchange:{\n\t\t\t\tstart:changeStart,\n\t\t\t\tend: endPoints?.change||changeStart+count,\n\t\t\t\tfinal:this.addressManager.changeAddress.counter-1\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Derives receiveAddresses and changeAddresses and checks their transactions and UTXOs.\n\t * @param threshold stop discovering after `threshold` addresses with no activity\n\t */\n\tasync addressDiscovery(threshold = 64, debug = false, receiveStart=0, changeStart=0, count=0): Promise <{\n\t\tdebugInfo: Map <string, {utxos: Api.Utxo[], address: string}>|null;\n\t\thighestIndex:{receive:number, change:number},\n\t\tendPoints:{receive:number, change:number}\n\t}> {\n\t\tlet addressList: string[] = [];\n\t\tlet debugInfo: Map < string, {utxos: Api.Utxo[], address: string} > | null = null;\n\n\t\tthis.logger.info(`sync ... running address discovery, threshold:${threshold}`);\n\t\tconst cacheIndexes = this.cacheStore.getAddressIndexes()??{receive:0, change:0}\n\t\tthis.logger.info(`sync ...cacheIndexes: receive:${cacheIndexes.receive}, change:${cacheIndexes.change}`);\n\t\tlet highestIndex = {\n\t\t\treceive:this.addressManager.receiveAddress.counter-1,\n\t\t\tchange:this.addressManager.changeAddress.counter-1\n\t\t}\n\t\tlet endPoints = {\n\t\t\treceive:0,\n\t\t\tchange:0\n\t\t}\n\t\tlet maxOffset = {\n\t\t\treceive: receiveStart + count,\n\t\t\tchange: changeStart + count\n\t\t}\n\n\t\tconst doDiscovery = async(\n\t\t\tn:number, deriveType:'receive'|'change', offset:number\n\t\t): Promise <number> => {\n\n\t\t\tthis.logger.info(`sync ... scanning ${offset} - ${offset+n} ${deriveType} addresses`);\n\t\t\tthis.emit(\"sync-progress\", {\n\t\t\t\tstart:offset,\n\t\t\t\tend:offset+n,\n\t\t\t\taddressType:deriveType\n\t\t\t})\n\t\t\tconst derivedAddresses = this.addressManager.getAddresses(n, deriveType, offset);\n\t\t\tconst addresses = derivedAddresses.map((obj) => obj.address);\n\t\t\taddressList = [...addressList, ...addresses];\n\t\t\tthis.logger.verbose(\n\t\t\t\t`${deriveType}: address data for derived indices ${derivedAddresses[0].index}..${derivedAddresses[derivedAddresses.length-1].index}`\n\t\t\t);\n\t\t\t// if (this.loggerLevel > 0)\n\t\t\t// \tthis.logger.verbose(\"addressDiscovery: findUtxos for addresses::\", addresses)\n\t\t\tconst {addressesWithUTXOs, txID2Info} = await this.findUtxos(addresses, debug);\n\t\t\tif (!debugInfo)\n\t\t\t\tdebugInfo = txID2Info;\n\t\t\tif (addressesWithUTXOs.length === 0) {\n\t\t\t\t// address discovery complete\n\t\t\t\tconst lastAddressIndexWithTx = highestIndex[deriveType];//offset - (threshold - n) - 1;\n\t\t\t\tthis.logger.verbose(`${deriveType}: address discovery complete`);\n\t\t\t\tthis.logger.verbose(`${deriveType}: last activity on address #${lastAddressIndexWithTx}`);\n\t\t\t\tthis.logger.verbose(`${deriveType}: no activity from ${offset}..${offset + n}`);\n\t\t\t\tif(offset >= maxOffset[deriveType] && offset >= cacheIndexes[deriveType]){\n\t\t\t\t\tendPoints[deriveType] = offset+n;\n\t\t\t\t\treturn lastAddressIndexWithTx;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// else keep doing discovery\n\t\t\tconst index =\n\t\t\t\tderivedAddresses\n\t\t\t\t.filter((obj) => addressesWithUTXOs.includes(obj.address))\n\t\t\t\t.reduce((prev, cur) => Math.max(prev, cur.index), highestIndex[deriveType]);\n\t\t\thighestIndex[deriveType] = index;\n\t\t\treturn doDiscovery(n, deriveType, offset + n);\n\t\t};\n\t\tconst highestReceiveIndex = await doDiscovery(threshold, 'receive', receiveStart);\n\t\tconst highestChangeIndex = await doDiscovery(threshold, 'change', changeStart);\n\t\tthis.addressManager.receiveAddress.advance(highestReceiveIndex + 1);\n\t\tthis.addressManager.changeAddress.advance(highestChangeIndex + 1);\n\t\tthis.logger.verbose(\n\t\t\t`receive address index: ${highestReceiveIndex}; change address index: ${highestChangeIndex}`,\n\t\t\t`receive-address-index: ${this.addressManager.receiveAddress.counter}; change address index: ${this.addressManager.changeAddress.counter}`\n\t\t);\n\n\t\tif(!this.syncOnce && !this.syncInProggress)\n\t\t\tawait this.utxoSet.utxoSubscribe();\n\n\t\tthis.runStateChangeHooks();\n\t\tlet addressIndexes = {\n\t\t\treceive:Math.max(cacheIndexes.receive, this.addressManager.receiveAddress.counter),\n\t\t\tchange:Math.max(cacheIndexes.change, this.addressManager.changeAddress.counter)\n\t\t}\n\t\tthis.logger.info(`sync ...new cache: receive:${addressIndexes.receive}, change:${addressIndexes.change}`);\n\t\tthis.cacheStore.setAddressIndexes(addressIndexes)\n\t\tthis.emit(\"sync-end\", addressIndexes)\n\t\treturn {highestIndex, endPoints, debugInfo};\n\t}\n\n\t// TODO: convert amount to sompis aka satoshis\n\t// TODO: bn\n\t/**\n\t * Compose a serialized, signed transaction\n\t * @param obj\n\t * @param obj.toAddr To address in cashaddr format (e.g. karlsentest:qq0d6h0prjm5mpdld5pncst3adu0yam6xch4tr69k2)\n\t * @param obj.amount Amount to send in sompis (100000000 (1e8) sompis in 1 KLS)\n\t * @param obj.fee Fee for miners in sompis\n\t * @param obj.changeAddrOverride Use this to override automatic change address derivation\n\t * @throws if amount is above `Number.MAX_SAFE_INTEGER`\n\t */\n\tcomposeTx({\n\t\ttoAddr,\n\t\tamount,\n\t\tfee = DEFAULT_FEE,\n\t\tchangeAddrOverride,\n\t\tskipSign = false,\n\t\tprivKeysInfo = false,\n\t\tcompoundingUTXO = false,\n\t\tcompoundingUTXOMaxCount = COMPOUND_UTXO_MAX_COUNT\n\t}: TxSend): ComposeTxInfo {\n\t\t// TODO: bn!\n\t\tamount = parseInt(amount as any);\n\t\tfee = parseInt(fee as any);\n\t\t// if (this.loggerLevel > 0) {\n\t\t// \tfor (let i = 0; i < 100; i++)\n\t\t// \t\tconsole.log('Wallet transaction request for', amount, typeof amount);\n\t\t// }\n\t\t//if (!Number.isSafeInteger(amount)) throw new Error(`Amount ${amount} is too large`);\n\t\tlet utxos, utxoIds, mass;\n\t\tif(compoundingUTXO){\n\t\t\t({utxos, utxoIds, amount, mass} = this.utxoSet.collectUtxos(compoundingUTXOMaxCount));\n\t\t}else{\n\t\t\t({utxos, utxoIds, mass} = this.utxoSet.selectUtxos(amount + fee));\n\t\t}\n\t\t//if(mass > Wallet.MaxMassUTXOs){\n\t\t//\tthrow new Error(`Maximum number of inputs (UTXOs) reached. Please reduce this transaction amount.`);\n\t\t//}\n\t\tconst privKeys = utxos.reduce((prev: string[], cur:UnspentOutput) => {\n\t\t\treturn [this.addressManager.all[String(cur.address)], ...prev] as string[];\n\t\t}, []);\n\n\t\tthis.logger.info(\"utxos.length\", utxos.length)\n\n\t\tconst changeAddr = changeAddrOverride || this.addressManager.changeAddress.next();\n\t\ttry {\n\t\t\tconst tx: karlsencore.Transaction = new karlsencore.Transaction()\n\t\t\t\t.from(utxos)\n\t\t\t\t.to(toAddr, amount)\n\t\t\t\t.setVersion(0)\n\t\t\t\t.fee(fee)\n\t\t\t\t.change(changeAddr)\n\t\t\tif(!skipSign)\n\t\t\t\ttx.sign(privKeys, karlsencore.crypto.Signature.SIGHASH_ALL, 'schnorr');\n\n\t\t\t//window.txxxx = tx;\n\t\t\treturn {\n\t\t\t\ttx: tx,\n\t\t\t\tid: tx.id,\n\t\t\t\trawTx: tx.toString(),\n\t\t\t\tutxoIds,\n\t\t\t\tamount,\n\t\t\t\tfee,\n\t\t\t\tutxos,\n\t\t\t\ttoAddr,\n\t\t\t\tprivKeys: privKeysInfo?privKeys:[]\n\t\t\t};\n\t\t} catch (e) {\n\t\t\tconsole.log(\"composeTx:error\", e)\n\t\t\t// !!! FIXME\n\t\t\tif(!changeAddrOverride)\n\t\t\t\tthis.addressManager.changeAddress.reverse();\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tminimumRequiredTransactionRelayFee(mass:number):number{\n\t\tlet minimumFee = (mass * this.options.minimumRelayTransactionFee) / 1000\n\n\t\tif (minimumFee == 0 && this.options.minimumRelayTransactionFee > 0) {\n\t\t\tminimumFee = this.options.minimumRelayTransactionFee\n\t\t}\n\n\t\t// Set the minimum fee to the maximum possible value if the calculated\n\t\t// fee is not in the valid range for monetary amounts.\n\t\tif (minimumFee > MaxSompi) {\n\t\t\tminimumFee = MaxSompi\n\t\t}\n\n\t\treturn minimumFee\n\t}\n\n\t/*\n\tvalidateAddress(addr:string):boolean{\n\t\tlet address = new karlsencore.Address(addr);\n\t\treturn address.type == \"pubkey\";\n\t}\n\t*/\n\n\t/**\n\t * Estimate transaction fee. Returns transaction data.\n\t * @param txParams\n\t * @param txParams.toAddr To address in cashaddr format (e.g. karlsentest:qq0d6h0prjm5mpdld5pncst3adu0yam6xch4tr69k2)\n\t * @param txParams.amount Amount to send in sompis (100000000 (1e8) sompis in 1 KLS)\n\t * @param txParams.fee Fee for miners in sompis\n\t * @throws `FetchError` if endpoint is down. API error message if tx error. Error if amount is too large to be represented as a javascript number.\n\t */\n\tasync estimateTransaction(txParamsArg: TxSend): Promise < TxInfo > {\n\t\tlet address = this.addressManager.changeAddress.current.address;\n\t\tif(!address){\n\t\t\taddress = this.addressManager.changeAddress.next();\n\t\t}\n\t\ttxParamsArg.changeAddrOverride = address;\n\t\treturn this.composeTxAndNetworkFeeInfo(txParamsArg);\n\t}\n\tasync composeTxAndNetworkFeeInfo(txParamsArg: TxSend): Promise < TxInfo >{\n\t\tawait this.waitOrSync();\n\t\tif(!txParamsArg.fee)\n\t\t\ttxParamsArg.fee = 0;\n\t\tthis.logger.info(`tx ... sending to ${txParamsArg.toAddr}`)\n\t\tthis.logger.info(`tx ... amount: ${KLS(txParamsArg.amount)} user fee: ${KLS(txParamsArg.fee)} max data fee: ${KLS(txParamsArg.networkFeeMax||0)}`)\n\n\t\t//if(!this.validateAddress(txParamsArg.toAddr)){\n\t\t//\tthrow new Error(\"Invalid address\")\n\t\t//}\n\n\t\tlet txParams : TxSend = { ...txParamsArg } as TxSend;\n\t\tconst networkFeeMax = txParams.networkFeeMax || 0;\n\t\tlet calculateNetworkFee = !!txParams.calculateNetworkFee;\n\t\tlet inclusiveFee = !!txParams.inclusiveFee;\n\t\tconst {skipSign=true, privKeysInfo=false} = txParams;\n\t\ttxParams.skipSign = skipSign;\n\t\ttxParams.privKeysInfo = privKeysInfo;\n\n\t\t//console.log(\"calculateNetworkFee:\", calculateNetworkFee, \"inclusiveFee:\", inclusiveFee)\n\n\t\tlet data = this.composeTx(txParams);\n\t\t\n\t\tlet {txSize, mass} = data.tx.getMassAndSize();\n\t\tlet dataFee = this.minimumRequiredTransactionRelayFee(mass);\n\t\tconst priorityFee = txParamsArg.fee;\n\n\t\tif(txParamsArg.compoundingUTXO){\n\t\t\tinclusiveFee = true;\n\t\t\tcalculateNetworkFee = true;\n\t\t\ttxParamsArg.amount = data.amount;\n\t\t\ttxParams.amount = data.amount;\n\t\t\ttxParams.compoundingUTXO = false;\n\t\t}\n\n\t\tconst txAmount = txParamsArg.amount;\n\t\tlet amountRequested = txParamsArg.amount+priorityFee;\n\n\t\tlet amountAvailable = data.utxos.map(utxo=>utxo.satoshis).reduce((a,b)=>a+b,0);\n\t\tthis.logger.verbose(`tx ... need data fee: ${KLS(dataFee)} total needed: ${KLS(amountRequested+dataFee)}`)\n\t\tthis.logger.verbose(`tx ... available: ${KLS(amountAvailable)} in ${data.utxos.length} UTXOs`)\n\n\t\tif(networkFeeMax && dataFee > networkFeeMax) {\n\t\t\tthrow new Error(`Fee max is ${networkFeeMax} but the minimum fee required for this transaction is ${KLS(dataFee)} KLS`);\n\t\t}\n\n\t\tif(calculateNetworkFee){\n\t\t\tdo {\n\t\t\t\t//console.log(`insufficient data fees... incrementing by ${dataFee}`);\n\t\t\t\ttxParams.fee = priorityFee+dataFee;\n\t\t\t\tif(inclusiveFee){\n\t\t\t\t\ttxParams.amount = txAmount-txParams.fee;\n\t\t\t\t}\n\t\t\t\tthis.logger.verbose(`tx ... insufficient data fee for transaction size of ${txSize} bytes`);\n\t\t\t\tthis.logger.verbose(`tx ... need data fee: ${KLS(dataFee)} for ${data.utxos.length} UTXOs`);\n\t\t\t\tthis.logger.verbose(`tx ... rebuilding transaction with additional inputs`);\n\t\t\t\tlet utxoLen = data.utxos.length;\n\t\t\t\tthis.logger.debug(`final fee ${txParams.fee}`);\n\t\t\t\tdata = this.composeTx(txParams);\n\t\t\t\t({txSize, mass} = data.tx.getMassAndSize());\n\t\t\t\tdataFee = this.minimumRequiredTransactionRelayFee(mass);\n\t\t\t\tif(data.utxos.length != utxoLen)\n\t\t\t\t\tthis.logger.verbose(`tx ... aggregating: ${data.utxos.length} UTXOs`);\n\n\t\t\t} while((!networkFeeMax || txParams.fee <= networkFeeMax) && txParams.fee < dataFee+priorityFee);\n\n\t\t\tif(networkFeeMax && txParams.fee > networkFeeMax)\n\t\t\t\tthrow new Error(`Maximum network fee exceeded; need: ${KLS(dataFee)} KLS maximum is: ${KLS(networkFeeMax)} KLS`);\n\n\t\t}else if(dataFee > priorityFee){\n\t\t\tthrow new Error(`Minimum fee required for this transaction is ${KLS(dataFee)} KLS`);\n\t\t}else if(inclusiveFee){\n\t\t\ttxParams.amount -= txParams.fee;\n\t\t\tdata = this.composeTx(txParams);\n\t\t}\n\n\t\tdata.dataFee = dataFee;\n\t\tdata.totalAmount = txParams.fee+txParams.amount;\n\t\tdata.txSize = txSize;\n\t\tdata.note = txParamsArg.note||\"\";\n\n\t\treturn data as TxInfo\n\t}\n\n\t/**\n\t * Build a transaction. Returns transaction info.\n\t * @param txParams\n\t * @param txParams.toAddr To address in cashaddr format (e.g. karlsentest:qq0d6h0prjm5mpdld5pncst3adu0yam6xch4tr69k2)\n\t * @param txParams.amount Amount to send in sompis (100000000 (1e8) sompis in 1 KLS)\n\t * @param txParams.fee Fee for miners in sompis\n\t * @throws `FetchError` if endpoint is down. API error message if tx error. Error if amount is too large to be represented as a javascript number.\n\t */\n\tasync buildTransaction(txParamsArg: TxSend, debug = false): Promise < BuildTxResult > {\n\t\tconst ts0 = Date.now();\n\t\ttxParamsArg.skipSign = true;\n\t\ttxParamsArg.privKeysInfo = true;\n\t\tconst data = await this.composeTxAndNetworkFeeInfo(txParamsArg);\n\t\tconst { \n\t\t\tid, tx, utxos, utxoIds, amount, toAddr,\n\t\t\tfee, dataFee, totalAmount, txSize, note, privKeys\n\t\t} = data;\n\n\t\tconst ts_0 = Date.now();\n\t\ttx.sign(privKeys, karlsencore.crypto.Signature.SIGHASH_ALL, 'schnorr');\n\t\tconst {mass:txMass} = tx.getMassAndSize();\n\t\tthis.logger.info(\"txMass\", txMass)\n\t\tif(txMass > Wallet.MaxMassAcceptedByBlock){\n\t\t\tthrow new Error(`Transaction size/mass limit reached. Please reduce this transaction amount. (Mass: ${txMass})`);\n\t\t}\n\n\t\tconst ts_1 = Date.now();\n\t\t//const rawTx = tx.toString();\n\t\tconst ts_2 = Date.now();\n\n\n\t\tthis.logger.info(`tx ... required data fee: ${KLS(dataFee)} (${utxos.length} UTXOs)`);// (${KLS(txParamsArg.fee)}+${KLS(dataFee)})`);\n\t\t//this.logger.verbose(`tx ... final fee: ${KLS(dataFee+txParamsArg.fee)} (${KLS(txParamsArg.fee)}+${KLS(dataFee)})`);\n\t\tthis.logger.info(`tx ... resulting total: ${KLS(totalAmount)}`);\n\n\n\t\t//console.log(utxos);\n\n\t\tif (debug || this.loggerLevel > 0) {\n\t\t\tthis.logger.debug(\"submitTransaction: estimateTx\", data)\n\t\t\tthis.logger.debug(\"sendTx:utxos\", utxos)\n\t\t\tthis.logger.debug(\"::utxos[0].script::\", utxos[0].script)\n\t\t\t//console.log(\"::utxos[0].address::\", utxos[0].address)\n\t\t}\n\n\t\tconst {nLockTime: lockTime, version } = tx;\n\n\t\tif (debug || this.loggerLevel > 0)\n\t\t\tthis.logger.debug(\"composeTx:tx\", \"txSize:\", txSize)\n\n\t\tconst ts_3 = Date.now();\n\t\tconst inputs: RPC.TransactionInput[] = tx.inputs.map((input: karlsencore.Transaction.Input) => {\n\t\t\tif (debug || this.loggerLevel > 0) {\n\t\t\t\tthis.logger.debug(\"input.script.inspect\", input.script.inspect())\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tpreviousOutpoint: {\n\t\t\t\t\ttransactionId: input.prevTxId.toString(\"hex\"),\n\t\t\t\t\tindex: input.outputIndex\n\t\t\t\t},\n\t\t\t\tsignatureScript: input.script.toBuffer().toString(\"hex\"),\n\t\t\t\tsequence: input.sequenceNumber,\n\t\t\t\tsigOpCount:1\n\t\t\t};\n\t\t})\n\t\tconst ts_4 = Date.now();\n\t\tconst outputs: RPC.TransactionOutput[] = tx.outputs.map((output: karlsencore.Transaction.Output) => {\n\t\t\treturn {\n\t\t\t\tamount: output.satoshis,\n\t\t\t\tscriptPublicKey: {\n\t\t\t\t\tscriptPublicKey: output.script.toBuffer().toString(\"hex\"),\n\t\t\t\t\tversion: 0\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\tconst ts_5 = Date.now();\n\n\t\t//const payloadStr = \"0000000000000000000000000000000\";\n\t\t//const payload = Buffer.from(payloadStr).toString(\"base64\");\n\t\t//console.log(\"payload-hex:\", Buffer.from(payloadStr).toString(\"hex\"))\n\t\t//@ ts-ignore\n\t\t//const payloadHash = karlsencore.crypto.Hash.sha256sha256(Buffer.from(payloadStr));\n\t\tconst rpcTX: RPC.SubmitTransactionRequest = {\n\t\t\ttransaction: {\n\t\t\t\tversion,\n\t\t\t\tinputs,\n\t\t\t\toutputs,\n\t\t\t\tlockTime,\n\t\t\t\t//payload:'f00f00000000000000001976a914784bf4c2562f38fe0c49d1e0538cee4410d37e0988ac',\n\t\t\t\tpayloadHash: '0000000000000000000000000000000000000000000000000000000000000000',\n\t\t\t\t//payloadHash:'afe7fc6fe3288e79f9a0c05c22c1ead2aae29b6da0199d7b43628c2588e296f9',\n\t\t\t\t//\n\t\t\t\tsubnetworkId: this.subnetworkId, //Buffer.from(this.subnetworkId, \"hex\").toString(\"base64\"),\n\t\t\t\tfee,\n\t\t\t\t//gas: 0\n\t\t\t}\n\t\t}\n\n\t\t//const rpctx = JSON.stringify(rpcTX, null, \"  \");\n\n\t\tconst ts1 = Date.now();\n\t\tthis.logger.info(`tx ... generation time ${((ts1-ts0)/1000).toFixed(2)} sec`)\n\n\t\tif (debug || this.loggerLevel > 0) {\n\t\t\tthis.logger.debug(`rpcTX ${JSON.stringify(rpcTX, null, \"  \")}`)\n\t\t\tthis.logger.debug(`rpcTX ${JSON.stringify(rpcTX)}`)\n\t\t}\n\n\t\tconst ts_6 = Date.now();\n\n\t\tthis.logger.info(`time in msec`, {\n\t\t\t\"total\": ts_6-ts0,\n\t\t\t\"estimate-transaction\": ts_0-ts0,\n\t\t\t\"tx.sign\": ts_1-ts_0,\n\t\t\t\"tx.toString\": ts_2-ts_1,\n\t\t\t//\"ts_3-ts_2\": ts_3-ts_2,\n\t\t\t\"tx.inputs.map\": ts_4-ts_3,\n\t\t\t\"tx.outputs.map\": ts_5-ts_4,\n\t\t\t//\"ts_6-ts_5\": ts_6-ts_5\n\t\t})\n\n\t\tif(txParamsArg.skipUTXOInUseMark !== true){\n\t\t\tthis.utxoSet.updateUsed(utxos);\n\t\t}\n\n\t\t//const rpctx = JSON.stringify(rpcTX, null, \"  \");\n\t\t//console.log(\"rpcTX\", rpcTX)\n\t\t//console.log(\"\\n\\n########rpctx\\n\", rpctx+\"\\n\\n\\n\")\n\t\t//if(amount/1e8 > 3)\n\t\t//\tthrow new Error(\"TODO XXXXXX\")\n\t\treturn {...data, rpcTX}\n\t}\n\n\t/**\n\t * Send a transaction. Returns transaction id.\n\t * @param txParams\n\t * @param txParams.toAddr To address in cashaddr format (e.g. karlsentest:qq0d6h0prjm5mpdld5pncst3adu0yam6xch4tr69k2)\n\t * @param txParams.amount Amount to send in sompis (100000000 (1e8) sompis in 1 KLS)\n\t * @param txParams.fee Fee for miners in sompis\n\t * @throws `FetchError` if endpoint is down. API error message if tx error. Error if amount is too large to be represented as a javascript number.\n\t */\n\tasync submitTransaction(txParamsArg: TxSend, debug = false): Promise < TxResp | null > {\n\t\ttxParamsArg.skipUTXOInUseMark = true;\n\n\t\tlet reverseChangeAddress = false;\n\t\tif(!txParamsArg.changeAddrOverride){\n\t\t\ttxParamsArg.changeAddrOverride = this.addressManager.changeAddress.next();\n\t\t\treverseChangeAddress = true;\n\t\t}\n\n\t\tconst {\n\t\t\trpcTX, utxoIds, amount, toAddr, note, utxos\n\t\t} = await this.buildTransaction(txParamsArg, debug);\n\n\t\t//console.log(\"rpcTX:\", rpcTX)\n\t\t//throw new Error(\"TODO : XXXX\")\n\t\ttry {\n\t\t\tconst ts = Date.now();\n\t\t\tlet txid: string = await this.api.submitTransaction(rpcTX);\n\t\t\tconst ts3 = Date.now();\n\t\t\tthis.logger.info(`tx ... submission time ${((ts3-ts)/1000).toFixed(2)} sec`);\n\t\t\tthis.logger.info(`txid: ${txid}`);\n\t\t\tif(!txid){\n\t\t\t\tif(reverseChangeAddress)\n\t\t\t\t\tthis.addressManager.changeAddress.reverse();\n\t\t\t\treturn null;// as TxResp;\n\t\t\t}\n\n\t\t\tthis.utxoSet.inUse.push(...utxoIds);\n\t\t\tthis.txStore.add({\n\t\t\t\tin:false, ts, id:txid, amount, address:toAddr, note,\n\t\t\t\tblueScore: this.blueScore,\n\t\t\t\ttx:rpcTX.transaction,\n\t\t\t\tmyAddress: this.addressManager.isOur(toAddr),\n\t\t\t\tisCoinbase: false,\n\t\t\t\tversion:2\n\t\t\t})\n\t\t\tthis.updateDebugInfo();\n\t\t\tthis.emitCache()\n\t\t\t/*\n\t\t\tthis.pendingInfo.add(txid, {\n\t\t\t\trawTx: tx.toString(),\n\t\t\t\tutxoIds,\n\t\t\t\tamount,\n\t\t\t\tto: toAddr,\n\t\t\t\tfee\n\t\t\t});\n\t\t\t*/\n\t\t\tconst resp: TxResp = {\n\t\t\t\ttxid,\n\t\t\t\t//rpctx\n\t\t\t}\n\t\t\treturn resp;\n\t\t} catch (e:any) {\n\t\t\tif(reverseChangeAddress)\n\t\t\t\tthis.addressManager.changeAddress.reverse();\n\t\t\tif (typeof e.setExtraDebugInfo == \"function\"){\n\t\t\t\tlet mass = 0;\n\t\t\t\tlet satoshis = 0;\n\t\t\t\tlet list = utxos.map(tx=>{\n\t\t\t\t\tmass += tx.mass;\n\t\t\t\t\tsatoshis += tx.satoshis;\n\t\t\t\t\treturn Object.assign({}, tx, {\n\t\t\t\t\t\taddress:tx.address.toString(),\n\t\t\t\t\t\tscript:tx.script?.toString()\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t\t\t//86500,00000000\n\t\t\t\tlet info = {\n\t\t\t\t\tmass,\n\t\t\t\t\tsatoshis,\n\t\t\t\t\tutxoCount: list.length,\n\t\t\t\t\tutxos: list\n\t\t\t\t}\n\t\t\t\te.setExtraDebugInfo(info)\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/*\n\t* Compound UTXOs by re-sending funds to itself\n\t*/\t\n\tasync compoundUTXOs(txCompoundOptions:TxCompoundOptions={}, debug=false):Promise<TxResp|null> {\n\t\tconst {\n\t\t\tUTXOMaxCount=COMPOUND_UTXO_MAX_COUNT,\n\t\t\tnetworkFeeMax=0,\n\t\t\tfee=0,\n\t\t\tuseLatestChangeAddress=false\n\t\t} = txCompoundOptions;\n\n\t\t//let toAddr = this.addressManager.changeAddress.next()\n\n\t\tlet toAddr = this.addressManager.changeAddress.atIndex[0];\n\t\t//console.log(\"compoundUTXOs: to address:\", toAddr, \"useLatestChangeAddress:\"+useLatestChangeAddress)\n\t\tif (useLatestChangeAddress){\n\t\t\ttoAddr = this.addressManager.changeAddress.current.address;\n\t\t}\n\t\tif(!toAddr){\n\t\t\ttoAddr = this.addressManager.changeAddress.next();\n\t\t}\n\n\t\tlet txParamsArg = {\n\t\t\ttoAddr,\n\t\t\tchangeAddrOverride:toAddr,\n\t\t\tamount: -1,\n\t\t\tfee,\n\t\t\tnetworkFeeMax,\n\t\t\tcompoundingUTXO:true,\n\t\t\tcompoundingUTXOMaxCount:UTXOMaxCount\n\t\t}\n\t\ttry {\n\t\t\tlet res = await this.submitTransaction(txParamsArg, debug);\n\t\t\tif(!res?.txid)\n\t\t\t\tthis.addressManager.changeAddress.reverse()\n\t\t\treturn res;\n\t\t}catch(e){\n\t\t\tthis.addressManager.changeAddress.reverse();\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\t/*\n\tundoPendingTx(id: string): void {\n\t\tconst {\tutxoIds\t} = this.pendingInfo.transactions[id];\n\t\tdelete this.pendingInfo.transactions[id];\n\t\tthis.utxoSet.release(utxoIds);\n\t\tthis.addressManager.changeAddress.reverse();\n\t\tthis.runStateChangeHooks();\n\t}\n\t*/\n\n\t/**\n\t * After we see the transaction in the API results, delete it from our pending list.\n\t * @param id The tx hash\n\t */\n\t /*\n\tdeletePendingTx(id: string): void {\n\t\t// undo + delete old utxos\n\t\tconst {\tutxoIds } = this.pendingInfo.transactions[id];\n\t\tdelete this.pendingInfo.transactions[id];\n\t\tthis.utxoSet.remove(utxoIds);\n\t}\n\t*/\n\n\trunStateChangeHooks(): void {\n\t\t//this.utxoSet.updateUtxoBalance();\n\t\t//this.updateBalance();\n\t}\n\n\t//UTXOsPollingStarted:boolean = false;\n\temitedUTXOs:Set<string> = new Set()\n\tstartUTXOsPolling(){\n\t\t//if (this.UTXOsPollingStarted)\n\t\t//\treturn\n\t\t//this.UTXOsPollingStarted = true;\n\t\tthis.emitUTXOs();\n\t}\n\n\temitUTXOs(){\n\t\tlet chunks = helper.chunks([...this.utxoSet.utxos.confirmed.values()], 100);\n\t\tchunks = chunks.concat(helper.chunks([...this.utxoSet.utxos.pending.values()], 100));\n\n\t\tlet send = ()=>{\n\t\t\tlet utxos = chunks.pop();\n\t\t\tif (!utxos)\n\t\t\t\treturn\n\t\t\tutxos = utxos.map(tx=>{\n\t\t\t\treturn Object.assign({}, tx, {\n\t\t\t\t\taddress:tx.address.toString()\n\t\t\t\t})\n\t\t\t})\n\t\t\tthis.emit(\"utxo-sync\", {utxos})\n\n\t\t\thelper.dpc(200, send)\n\t\t}\n\n\t\tsend();\n\t}\n\n\tget cache() {\n\t\treturn {\n\t\t\t//pendingTx: this.pendingInfo.transactions,\n\t\t\tutxos: {\n\t\t\t\t//utxoStorage: this.utxoSet.utxoStorage,\n\t\t\t\tinUse: this.utxoSet.inUse,\n\t\t\t},\n\t\t\t//transactionsStorage: this.transactionsStorage,\n\t\t\taddresses: {\n\t\t\t\treceiveCounter: this.addressManager.receiveAddress.counter,\n\t\t\t\tchangeCounter: this.addressManager.changeAddress.counter,\n\t\t\t}\n\t\t};\n\t}\n\n\trestoreCache(cache: WalletCache): void {\n\t\t//this.pendingInfo.transactions = cache.pendingTx;\n\t\t//this.utxoSet.utxoStorage = cache.utxos.utxoStorage;\n\t\tthis.utxoSet.inUse = cache.utxos.inUse;\n\t\t/*\n\t\tObject.entries(this.utxoSet.utxoStorage).forEach(([addr, utxos]: [string, Api.Utxo[]]) => {\n\t\t\tthis.utxoSet.add(utxos, addr);\n\t\t});\n\t\tthis.transactionsStorage = cache.transactionsStorage;\n\t\tthis.addressManager.getAddresses(cache.addresses.receiveCounter + 1, 'receive');\n\t\tthis.addressManager.getAddresses(cache.addresses.changeCounter + 1, 'change');\n\t\tthis.addressManager.receiveAddress.advance(cache.addresses.receiveCounter - 1);\n\t\tthis.addressManager.changeAddress.advance(cache.addresses.changeCounter);\n\t\t//this.transactions = txParser(this.transactionsStorage, Object.keys(this.addressManager.all));\n\t\tthis.runStateChangeHooks();\n\t\t*/\n\t}\n\n\t/**\n\t * Generates encrypted wallet data.\n\t * @param password user's chosen password\n\t * @returns Promise that resolves to object-like string. Suggested to store as string for .import().\n\t */\n\tasync export (password: string): Promise < string > {\n\t\tconst savedWallet: WalletSave = {\n\t\t\tprivKey: this.HDWallet.toString(),\n\t\t\tseedPhrase: this.mnemonic\n\t\t};\n\t\treturn Crypto.encrypt(password, JSON.stringify(savedWallet));\n\t}\n\n\n\tlogger: Logger;\n\tloggerLevel: number = 0;\n\tsetLogLevel(level: string) {\n\t\tthis.logger.setLevel(level);\n\t\tthis.loggerLevel = level!='none'?2:0;\n\t\tkarlsencore.setDebugLevel(level?1:0);\n\t}\n}\n\nexport {Wallet}\n"]}
\ No newline at end of file
